// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class logs extends ethereum.Event {
  get params(): logs__Params {
    return new logs__Params(this);
  }
}

export class logs__Params {
  _event: logs;

  constructor(event: logs) {
    this._event = event;
  }

  get truckId(): string {
    return this._event.parameters[0].value.toString();
  }

  get timeOut(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get weight(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class scam extends ethereum.Event {
  get params(): scam__Params {
    return new scam__Params(this);
  }
}

export class scam__Params {
  _event: scam;

  constructor(event: scam) {
    this._event = event;
  }

  get truckId(): string {
    return this._event.parameters[0].value.toString();
  }

  get weight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Bal__dataResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getTimeOut(): BigInt {
    return this.value0;
  }

  getWeight(): BigInt {
    return this.value1;
  }
}

export class Bal extends ethereum.SmartContract {
  static bind(address: Address): Bal {
    return new Bal("Bal", address);
  }

  data(param0: string): Bal__dataResult {
    let result = super.call("data", "data(string):(uint256,uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return new Bal__dataResult(result[0].toBigInt(), result[1].toBigInt());
  }

  try_data(param0: string): ethereum.CallResult<Bal__dataResult> {
    let result = super.tryCall("data", "data(string):(uint256,uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bal__dataResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  legit(param0: string): boolean {
    let result = super.call("legit", "legit(string):(bool)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBoolean();
  }

  try_legit(param0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("legit", "legit(string):(bool)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddCall extends ethereum.Call {
  get inputs(): AddCall__Inputs {
    return new AddCall__Inputs(this);
  }

  get outputs(): AddCall__Outputs {
    return new AddCall__Outputs(this);
  }
}

export class AddCall__Inputs {
  _call: AddCall;

  constructor(call: AddCall) {
    this._call = call;
  }

  get _truckId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _weight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddCall__Outputs {
  _call: AddCall;

  constructor(call: AddCall) {
    this._call = call;
  }
}

export class AuthCall extends ethereum.Call {
  get inputs(): AuthCall__Inputs {
    return new AuthCall__Inputs(this);
  }

  get outputs(): AuthCall__Outputs {
    return new AuthCall__Outputs(this);
  }
}

export class AuthCall__Inputs {
  _call: AuthCall;

  constructor(call: AuthCall) {
    this._call = call;
  }

  get _truckId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AuthCall__Outputs {
  _call: AuthCall;

  constructor(call: AuthCall) {
    this._call = call;
  }
}

export class DelCall extends ethereum.Call {
  get inputs(): DelCall__Inputs {
    return new DelCall__Inputs(this);
  }

  get outputs(): DelCall__Outputs {
    return new DelCall__Outputs(this);
  }
}

export class DelCall__Inputs {
  _call: DelCall;

  constructor(call: DelCall) {
    this._call = call;
  }

  get _truckId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class DelCall__Outputs {
  _call: DelCall;

  constructor(call: DelCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCall extends ethereum.Call {
  get inputs(): UpdateCall__Inputs {
    return new UpdateCall__Inputs(this);
  }

  get outputs(): UpdateCall__Outputs {
    return new UpdateCall__Outputs(this);
  }
}

export class UpdateCall__Inputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }

  get _truckId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _weight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateCall__Outputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }
}
